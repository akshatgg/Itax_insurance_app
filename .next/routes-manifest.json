{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/auth/login",
      "regex": "^/auth/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/login(?:/)?$"
    },
    {
      "page": "/auth/register",
      "regex": "^/auth/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/register(?:/)?$"
    },
    {
      "page": "/calculator",
      "regex": "^/calculator(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/calculator(?:/)?$"
    },
    {
      "page": "/chat",
      "regex": "^/chat(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/chat(?:/)?$"
    },
    {
      "page": "/chat-support",
      "regex": "^/chat\\-support(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/chat\\-support(?:/)?$"
    },
    {
      "page": "/claims",
      "regex": "^/claims(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/claims(?:/)?$"
    },
    {
      "page": "/claims/new",
      "regex": "^/claims/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/claims/new(?:/)?$"
    },
    {
      "page": "/compare",
      "regex": "^/compare(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/compare(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/find-agent",
      "regex": "^/find\\-agent(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/find\\-agent(?:/)?$"
    },
    {
      "page": "/insurance/auto",
      "regex": "^/insurance/auto(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/insurance/auto(?:/)?$"
    },
    {
      "page": "/insurance/health",
      "regex": "^/insurance/health(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/insurance/health(?:/)?$"
    },
    {
      "page": "/insurance/life",
      "regex": "^/insurance/life(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/insurance/life(?:/)?$"
    },
    {
      "page": "/insurance/star-health",
      "regex": "^/insurance/star\\-health(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/insurance/star\\-health(?:/)?$"
    },
    {
      "page": "/knowledge-center",
      "regex": "^/knowledge\\-center(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/knowledge\\-center(?:/)?$"
    },
    {
      "page": "/mobile-app",
      "regex": "^/mobile\\-app(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/mobile\\-app(?:/)?$"
    },
    {
      "page": "/notifications",
      "regex": "^/notifications(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/notifications(?:/)?$"
    },
    {
      "page": "/offline",
      "regex": "^/offline(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/offline(?:/)?$"
    },
    {
      "page": "/payments/failed",
      "regex": "^/payments/failed(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/payments/failed(?:/)?$"
    },
    {
      "page": "/payments/methods",
      "regex": "^/payments/methods(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/payments/methods(?:/)?$"
    },
    {
      "page": "/payments/success",
      "regex": "^/payments/success(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/payments/success(?:/)?$"
    },
    {
      "page": "/profile",
      "regex": "^/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile(?:/)?$"
    },
    {
      "page": "/quote",
      "regex": "^/quote(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/quote(?:/)?$"
    },
    {
      "page": "/suggestions",
      "regex": "^/suggestions(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/suggestions(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}